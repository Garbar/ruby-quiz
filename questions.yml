name: Test Your Knowledge of Ruby and Rails!

main: STUB<p>Think you're smart enough to be on Jeopardy? Find out with this super crazy knowledge quiz!</p>
results: STUB<h5>Learn More</h5><p>Etiam scelerisque, nunc ac egestas consequat, odio nibh euismod nulla, eget auctor orci nibh vel nisi. Aliquam erat volutpat. Mauris vel neque sit amet nunc gravida congue sed sit amet purus.</p>

level1: Great!
level2:	Nice!
level3:	Not bad!
level4:	You must learn to distinguish between the ruby and rails!
level5:	You need to learn basics!

correctAnswerText: <p><span>That's right!</span></p>
incorrectAnswerText: <p><span>Uhh no.</span></p><p>
descriptionText: ""

questions:
- with_options: Rails
  description: |
    <p><span>with_options</span>(options, &block)</p>
    <p>An elegant way to factor duplication out of options passed to a series of method calls.
    Each method called in the block, with the block variable as the receiver, 
    will have its options merged with the default options hash provided.
    Each method called on the block variable must take an options hash as its final argumen</p>
    <p><a href='http://api.rubyonrails.org/?q=with_options'>api.rubyonrails.org</a></p>
- reverse_merge: Rails
- DateTime.current: Rails
- "Array(foo: :bar)      # => [[:foo, :bar]]": Ruby
- .to_json: Ruby
- Date.today: Ruby
- "a.cycle { |x| puts x }     # print, a, b, c, a, b, c,.. forever..": Ruby
- Time.now: Ruby
- .downcase!: Ruby
- class_attribute: Rails
- alias_attribute: Rails
- .duplicable?: Rails
- "Array.wrap(nil)     # => [] </br> Array.wrap([1, 2, 3]) # => [1, 2, 3]</br> Array.wrap(0)    # => [0]": Rails
- "'hello'.at(4)  # => 'o'": Rails
- aaa.instance_values: Rails
- 1.in?([1,2]): Rails
- M.reachable?: Rails
- delegate: Rails
- descendants: Rails
- .to_xml: Rails
- "(1..10).include?(3..7)  # => true </br> (1..10).include?(0..7)  # => false": Rails
- Hash[]: Ruby
- .superclass: Ruby
- 420.modulo(4): Ruby
- "[1,2,3,4,5].sample": Ruby
- '[%s] % "same old drag"             # => "[same old drag]”': Ruby
- "FileUtils.rm_r ‘somedir'": Ruby